name: React Website CI/CD
run-name: Build Deploy and Test by ðŸš€ ${{ github.actor }} ðŸ¤–
on: [push]
env:
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AWS_ENDPOINT_URL_SSO: ${{ vars.AWS_ENDPOINT_URL_SSO }}
  AWS_PROFILE: ${{ vars.AWS_PROFILE }}
  BUCKET_NAME: "cicd-bucket-k1m0-738135"
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          # cache-dependency-path: /home/runner/work/cicd-demo/cicd-demo/package-lock.json
      - run: npm ci
      - run: npm run build
      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        
      - run: mkdir -p ~/.aws/
      - run: echo "[techstarter]" > ~/.aws/credentials
      - run: echo "aws_access_key_id=$AWS_ACCESS_KEY" >> ~/.aws/credentials
      - run: echo "aws_secret_access_key=$AWS_SECRET_KEY" >> ~/.aws/credentials
      - run: echo "aws_session_token=$AWS_SESSION_TOKEN" >> ~/.aws/credentials
      - uses: hashicorp/setup-terraform@v2
      - name: Upload AWS credentials for Test-Job
        uses: actions/upload-artifact@v3
        with: 
          name: .aws
          path: |
            ~/.aws

  Test:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        name: .aws
        with:
          path: /home/runner/
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      - uses: unfor19/install-aws-cli-action@v1
      - uses: hashicorp/setup-terraform@v2
      - run: npm ci
      - run: npm run build

      - run: echo "TESTING"
      - run: ls -R ~/work
      - run: cat ~/.aws/credentials
      - run: npm test
      - run: aws configure list-profiles
      - run: aws s3 ls --region eu-central-1 --profile techstarter
      - run: terraform version
      - run: terraform -chdir=./infra init
      - run: terraform -chdir=./infra validate
      - run: terraform -chdir=./infra plan
      - name: Upload Terraform results for Deploy-Job 
        uses: actions/upload-artifact@v3
        with:
          name: infra
          path: ~/work/cicd-demo/cicd-demo/infra


  Deploy-and-Upload:
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - uses: actions/download-artifact@v3
        name: .aws
        with:
          path: /home/runner/
      - name: Download terraform results
        uses: actions/download-artifact@v3
        with:
          name: infra
          path: ~/work/cicd-demo/cicd-demo/infra
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      - uses: unfor19/install-aws-cli-action@v1
      - uses: hashicorp/setup-terraform@v2
      - run: npm ci
      - run: npm run build
      - run: echo "CREATING BUCKET {{ env.BUCKET_NAME }}"
      - run: terraform -chdir=./infra apply --auto-approve -var "bucket_name=${{ env.BUCKET_NAME }}",
      - run: aws s3 sync ./build s3://{{ env.BUCKET_NAME }} --profile techstarter